<?xml version="1.0"?>

<!--
  Copyright 2016 Goldman Sachs.
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  -->

<chapter >
    <title>Chaining</title>
    <para>
        This chapter introduces chaining and it's variants.
        It also introduces a motivating example that will be used to illustrate the various
        types of chaining in subsequent chapters.
    </para>
    <sect1>
        <title>Types of Chaining</title>
        <para>
            Chaining refers to how data is stored in a relational database
            such that changes to the data can be tracked.
        </para>
        <para>
            Changes can be tracked along two time dimensions:
            <itemizedlist>
                <listitem>
                    <para>
                        Business Time - This is when the change actually occurred in the world
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Processing Time - This is when the change actually was recorded in the database
                    </para>
                </listitem>
            </itemizedlist>
            There are three types of chaining :
            <itemizedlist>
                <listitem>
                    <para>
                        Audit-Only - In this type of chaining, changes are recorded with <emphasis role="italics">only the processing time</emphasis>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Business-Only - In this type of chaining, changes are recorded with <emphasis role="italics">only the business time</emphasis>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Bitemporal - In this type of chaining, changes are recorded with <emphasis role="italics">both the business time and processing time</emphasis>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </sect1>
    <sect1>
        <title>Motivating Example - The SlowBank</title>
        <para>
            Consider the case of the "SlowBank".
            The bank has several ATMs but the ATM's connectivity to the bank's backend systems is flaky.
            When an ATM is not able to communicate with the bank's backend, ATM transactions are recorded
            locally. Later someone is sent to fetch these local transactions which are manually applied to the
            bank's database.
        </para>
        <para>
            This delay in updating the bank's database means that your bank balance is not always upto date.
            Sometimes the bank says you have less money than you actually have ; sometimes it says you have more money than you actually have!
            All of this is very frustrating. But the bank happily adjusts your balance everytime you report a discrepancy.
        </para>
        <para>
            However, the bank has a new problem. They now need to be able to reason about how the account's balance changed
            over time.
        </para>
        <para>
            As we will see in the following chapters, each of the various chaining models allows us
            to reason about changes to the account in different ways.
        </para>
    </sect1>
</chapter>